@model List<RapidApiConsume.Models.ApiMovieViewModel>
@{
    Layout = null;
}

<link href="~/lib/bootstrap/dist/css/bootstrap.min.css" rel="stylesheet" />

<div class="container mt-4">
    <div class="row">
        @foreach (var item in Model)
        {
            var embedCode = GetYouTubeEmbedCode(item.Trailer);

            <div class="col-lg-3 col-md-4 col-sm-6 mb-4">
                <div class="card shadow-sm border-0 h-100">
                    <div class="position-relative">
                        <img src="@item.Cover" class="card-img-top" alt="Cover Image"
                             style="width:100%; height:150px; object-fit:cover; border-radius:8px 8px 0 0;">
                    </div>
                    <div class="card-body d-flex flex-column">
                        <h5 class="card-title text-primary mb-2">@item.Title</h5>
                        <p class="card-text text-muted mb-1"><strong>Genre:</strong> @item.Genre</p>
                        <p class="card-text text-muted mb-1"><strong>Actor:</strong> @item.Actor</p>
                        <p class="card-text text-muted mb-1"><strong>Director:</strong> @item.Director</p>
                        <p class="card-text text-muted mb-3"><strong>Country:</strong> @item.Country</p>
                        <p class="card-text mb-3">@item.Description</p>

                        @if (!string.IsNullOrEmpty(embedCode))
                        {
                            <div class="embed-responsive embed-responsive-16by9 mb-3">
                                @Html.Raw(embedCode)
                            </div>
                        }
                        else
                        {
                            <span class="text-muted">Trailer not available</span>
                        }

                        <button class="btn btn-outline-primary mt-auto">Learn More</button>
                    </div>
                </div>
            </div>
        }
    </div>
</div>

@functions {
    public static string GetYouTubeEmbedCode(string url)
    {
        var videoId = GetYouTubeVideoId(url);
        if (string.IsNullOrEmpty(videoId))
        {
            return string.Empty;
        }

        return $"<iframe class=\"embed-responsive-item\" src=\"https://www.youtube.com/embed/{videoId}\" frameborder=\"0\" allowfullscreen></iframe>";
    }

    private static string GetYouTubeVideoId(string url)
    {
        var regex = new System.Text.RegularExpressions.Regex(@"(?:https?:\/\/)?(?:www\.)?(?:youtube\.com\/(?:[^\/\n\s]+\/\S+\/|(?:v|e(?:mbed)?)\/|.*[?&]v=)|youtu\.be\/)([^""&?\/\s]{11})", System.Text.RegularExpressions.RegexOptions.IgnoreCase);
        var match = regex.Match(url);
        return match.Success ? match.Groups[1].Value : null;
    }
}
